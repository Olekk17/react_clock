{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getTime","date","toUTCString","slice","Clock","state","today","Date","timerTimeRefreshId","this","window","setInterval","setState","prevProps","prevState","clockName","props","console","debug","info","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timerClockNameId","handleRightMouseClick","event","preventDefault","handleLeftMouseClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAGA,SAASA,EAAQC,GACf,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,mBAAqB,EALvB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,mBAAqBE,OAAOC,aAAY,WAC3C,EAAKC,SAAS,CAAEN,MAAO,IAAIC,SAC1B,OAVP,gCAaE,SAAmBM,EAA4BC,GACzCD,EAAUE,YAAcN,KAAKO,MAAMD,WACrCE,QAAQC,MAAR,uBAA8BL,EAAUE,UAAxC,eAAwDN,KAAKO,MAAMD,YAGjED,EAAUR,QAAUG,KAAKJ,MAAMC,OACjCW,QAAQE,KAAKnB,EAAQS,KAAKJ,MAAMC,UAnBtC,kCAuBE,WACEI,OAAOU,cAAcX,KAAKD,sBAxB9B,oBA2BE,WACE,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,KAAKO,MAAMD,YAGb,YAED,sBAAMM,UAAU,cAAhB,SACGrB,EAAQS,KAAKJ,MAAMC,gBArC9B,GAA2BgB,IAAMC,WCXjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAQX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVd,UAAW,WAHf,EAMEe,iBAAmB,EANrB,EAwBEC,sBAAwB,SAACC,GACvBA,EAAMC,iBAEN,EAAKrB,SAAS,CAAEiB,UAAU,KA3B9B,EA8BEK,qBAAuB,WACrB,EAAKtB,SAAS,CAAEiB,UAAU,KA/B9B,uDAQE,WAA2B,IAAD,OACxBM,SAASC,iBAAiB,cAAe3B,KAAKsB,uBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,sBAExCzB,KAAKqB,iBAAmBpB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEG,UAAWS,QAC1B,QAdP,kCAiBE,WACEW,SAASE,oBAAoB,cAAe5B,KAAKsB,uBACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,sBAE3CxB,OAAOU,cAAcX,KAAKqB,oBArB9B,oBAkCE,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECZ,KAAKJ,MAAMwB,UAAY,cAAC,EAAD,CAAOd,UAAWN,KAAKJ,MAAMU,mBAvC7D,GAAyBO,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.03c13e98.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\nfunction getTime(date: Date):string {\n  return date.toUTCString().slice(-12, -4);\n}\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerTimeRefreshId = 0;\n\n  componentDidMount() {\n    this.timerTimeRefreshId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n\n    if (prevState.today !== this.state.today) {\n      console.info(getTime(this.state.today));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerTimeRefreshId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getTime(this.state.today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerClockNameId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleRightMouseClick);\n    document.addEventListener('click', this.handleLeftMouseClick);\n\n    this.timerClockNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleRightMouseClick);\n    document.removeEventListener('click', this.handleLeftMouseClick);\n\n    window.clearInterval(this.timerClockNameId);\n  }\n\n  handleRightMouseClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftMouseClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}